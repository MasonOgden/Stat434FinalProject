case_when(
# if measured in years
str_detect(age_char, pattern = "year") ~ as.double(str_extract(age_char, pattern= "\\d+")),
# if measured in months
str_detect(age_char, pattern = "month") ~ as.double(str_extract(age_char, pattern = "\\d+")) / 12,
# if measured in weeks
str_detect(age_char, pattern = "week") ~ as.double(str_extract(age_char, pattern = "\\d+")) / 52.1429,
# if measured in days
str_detect(age_char, pattern = "day") ~ as.double(str_extract(age_char, pattern = "\\d+")) / 365
)
}
collapse_breeds <- function(breed_vec) {
ifelse(str_detect(breed_vec, pattern = "Mix|\\/"), "Mix", breed_vec)
}
collapse_colors <- function(colors_fac) {
colors_vec <- as.character(colors_fac)
case_when(
str_detect(colors_vec, pattern = "Tabby") ~ "Tabby",
str_detect(colors_vec, pattern = "Point") ~ "Point",
str_detect(colors_vec, pattern = "Brindle") ~ "Brindle",
str_detect(colors_vec, pattern = "Calico") ~ "Calico",
str_detect(colors_vec, pattern = "Merle") ~ "Merle",
str_detect(colors_vec, pattern = "Tricolor") ~ "Tricolor",
str_detect(colors_vec, pattern = "Sable") ~ "Sable",
str_detect(colors_vec, pattern = "Blue Tick") |  str_detect(colors_vec, pattern = "Blue Cream") ~ "Blue",
str_detect(colors_vec, pattern = "Black Smoke") ~ "Black",
str_detect(colors_vec, pattern = "/") ~ "Multiple colors",
str_detect(colors_vec, pattern = "Tortie") | str_detect(colors_vec, pattern = "Torbie") ~ "Tortie/Torbie",
TRUE ~ colors_vec
)
}
preproc_rec <- recipe(outcome ~ ., data = df_small) %>%
# set 'animal_id' as the identifier variable, not to be used in prediction
update_role(animal_id, new_role = "id") %>%
# data preprocessing
step_mutate(
# convert age to numeric
age = age_to_years_numeric(age),
# add month variable (as a factor)
outcome_month = factor(month(outcome_datetime)),
# add year variable (as a factor)
outcome_year = factor(year(outcome_datetime)),
# reduce number of unique breeds
mix = factor(collapse_breeds(breed)),
# reduce number of unique animal colors
color = factor(collapse_colors(color))
) %>%
# add indicator variable for if date is a holiday
step_holiday(outcome_datetime,
holidays = c("ChristmasEve", "NewYearsDay", "USChristmasDay",
"USThanksgivingDay")) %>%
# remove columns that are no longer useful
step_rm(outcome_datetime, breed, animal_name, outcome_subtype)
# fit to training data
preproc_prepped <- preproc_rec %>% prep(df)
# apply to training data
preproc_train <- preproc_prepped %>% bake(df)
# apply to test data
preproc_test <- preproc_prepped %>% bake(test_df) %>%
mutate(animal_id = as.character(1:nrow(test_df)))
preproc_test %>% head()
preproc_dir <- dir %>%
paste0("/preprocessed_data")
preproc_train %>%
write_csv(paste0(preproc_dir, "/train_preprocessed.csv"))
preproc_test %>%
write_csv(paste0(preproc_dir, "/test_preprocessed.csv"))
library(tidyverse)
library(magrittr)
library(lubridate)
library(tidymodels)
set.seed(143)
dir <- here::here()
preproc_dir <- dir %>%
paste0("/preprocessed_data")
train <- preproc_dir %>%
paste0("/train_preprocessed.csv") %>%
read_csv()
test <- preproc_dir %>%
paste0("/test_preprocessed.csv") %>%
read_csv()
library(tidyverse)
library(magrittr)
library(lubridate)
library(tidymodels)
set.seed(143)
dir <- here::here()
preproc_dir <- dir %>%
paste0("/preprocessed_data")
train <- preproc_dir %>%
paste0("/train_preprocessed.csv") %>%
read_csv()
test <- preproc_dir %>%
paste0("/test_preprocessed.csv") %>%
read_csv()
train
train %>%
count(animal_type)
train %>%
count(animal_type) %>%
mutate(prop = n / sum(n))
train %>%
count(animal_type) %>%
mutate(prop = n / sum(n)) %>%
ggplot(aes(x = animal_type, y = prop)) +
geom_col()
train %>%
count(animal_type) %>%
mutate(prop = n / sum(n)) %>%
ggplot(aes(x = animal_type, y = prop)) +
geom_col(fill = "dodgerblue2", width = 0.8) +
ylim(0, 1)
train %>%
count(animal_type) %>%
mutate(prop = n / sum(n)) %>%
ggplot(aes(x = animal_type, y = prop)) +
geom_col(fill = "dodgerblue2", width = 0.8) +
ylim(0, 1) +
labs(x = "Animal Type", y = "Frequency",
title = "Proportion of Dogs and Cats in Training Data")
train %>%
count(animal_type) %>%
mutate(prop = n / sum(n)) %>%
ggplot(aes(x = animal_type, y = prop)) +
geom_col(fill = "dodgerblue2", width = 0.8) +
ylim(0, 1) +
labs(x = "Animal Type", y = "Frequency",
title = "Proportion of Cats and Dogs in Training Data")
train %>%
count(animal_type) %>%
mutate(prop = n / sum(n)) %>%
ggplot(aes(x = animal_type, y = prop)) +
geom_col(fill = "dodgerblue2", width = 0.8) +
ylim(0, 1) +
labs(x = "Animal Type", y = "Frequency",
title = "Proportion of Cats and Dogs in Training Data") +
theme_minimal()
train
train %>% pull(sex) %>% unique()
train %>% drop_na() %>% pull(sex) %>% unique()
train %>%
mutate(sex_bin = case_when(
str_detect(sex, pattern = "Male") ~ "Male",
str_detect(sex, pattern = "Female") ~ "Female",
TRUE ~ sex
))
train %>%
mutate(sex_bin = case_when(
str_detect(sex, pattern = "Male") ~ "Male",
str_detect(sex, pattern = "Female") ~ "Female",
TRUE ~ sex
)) %>%
select(sex, sex_bin)
train %>%
mutate(sex_bin = case_when(
str_detect(sex, pattern = "Male") ~ "Male",
str_detect(sex, pattern = "Female") ~ "Female",
TRUE ~ sex),
sex_status = case_when(
str_detect(sex, pattern = "Neutered") ~ "Neutered",
str_detect(sex, pattern = "Spayed") ~ "Spayed",
str_detect(sex, pattern = "Intact") ~ "Intact",
TRUE ~ sex)
) %>%
select(sex, sex_bin, sex_status)
train %>%
mutate(sex_bin = case_when(
str_detect(sex, pattern = "Male") ~ "Male",
str_detect(sex, pattern = "Female") ~ "Female",
TRUE ~ sex),
sex_status = case_when(
str_detect(sex, pattern = "Neutered") ~ "Neutered",
str_detect(sex, pattern = "Spayed") ~ "Spayed",
str_detect(sex, pattern = "Intact") ~ "Intact",
TRUE ~ sex)
) %>%
select(sex, sex_bin, sex_status) %>%
group_by(sex_bin) %>%
count(sex_status)
train %>%
drop_na() %>%
mutate(sex_bin = case_when(
str_detect(sex, pattern = "Male") ~ "Male",
str_detect(sex, pattern = "Female") ~ "Female",
TRUE ~ sex),
sex_status = case_when(
str_detect(sex, pattern = "Neutered") ~ "Neutered",
str_detect(sex, pattern = "Spayed") ~ "Spayed",
str_detect(sex, pattern = "Intact") ~ "Intact",
TRUE ~ sex)
) %>%
select(sex, sex_bin, sex_status) %>%
group_by(sex_bin) %>%
count(sex_status)
train %>%
drop_na() %>%
mutate(sex_bin = case_when(
str_detect(sex, pattern = "Male") ~ "Male",
str_detect(sex, pattern = "Female") ~ "Female",
TRUE ~ sex),
sex_status = case_when(
str_detect(sex, pattern = "Neutered") ~ "Neutered",
str_detect(sex, pattern = "Spayed") ~ "Spayed",
str_detect(sex, pattern = "Intact") ~ "Intact",
TRUE ~ sex)
) %>%
select(sex, sex_bin, sex_status) %>%
group_by(sex_bin) %>%
count(sex_status) %>%
ggplot(aes(x = sex_bin, y = n, fill = sex_status)) +
geom_col(position = "stack")
train %>%
drop_na() %>%
mutate(sex_bin = case_when(
str_detect(sex, pattern = "Male") ~ "Male",
str_detect(sex, pattern = "Female") ~ "Female",
TRUE ~ sex),
sex_status = case_when(
str_detect(sex, pattern = "Neutered") | str_detect(sex, pattern = "Spayed") ~ "Spayed/Neutered",
str_detect(sex, pattern = "Intact") ~ "Intact",
TRUE ~ sex)
) %>%
select(sex, sex_bin, sex_status) %>%
group_by(sex_bin) %>%
count(sex_status) %>%
ggplot(aes(x = sex_bin, y = n, fill = sex_status)) +
geom_col(position = "stack")
scales::hue_pal()(3)
my_colors <- scales::hue_pal()(3)
names(my_colors) <- c('Intact', 'Spayed/Neutered', 'Unknown')
my_colors <- scales::hue_pal()(3)
names(my_colors) <- c('Intact', 'Spayed/Neutered', 'Unknown')
train %>%
drop_na() %>%
mutate(sex_bin = case_when(
str_detect(sex, pattern = "Male") ~ "Male",
str_detect(sex, pattern = "Female") ~ "Female",
TRUE ~ sex),
sex_status = case_when(
str_detect(sex, pattern = "Neutered") | str_detect(sex, pattern = "Spayed") ~ "Spayed/Neutered",
str_detect(sex, pattern = "Intact") ~ "Intact",
TRUE ~ sex)
) %>%
select(sex, sex_bin, sex_status) %>%
group_by(sex_bin) %>%
count(sex_status) %>%
ggplot(aes(x = sex_bin, y = n, fill = sex_status)) +
geom_col(position = "stack") +
scale_fill_manual(
values = my_colors,
limits = c('Intact', 'Spayed/Neutered')
)
train %>%
drop_na() %>%
mutate(sex_bin = case_when(
str_detect(sex, pattern = "Male") ~ "Male",
str_detect(sex, pattern = "Female") ~ "Female",
TRUE ~ sex),
sex_status = case_when(
str_detect(sex, pattern = "Neutered") | str_detect(sex, pattern = "Spayed") ~ "Spayed/Neutered",
str_detect(sex, pattern = "Intact") ~ "Intact",
TRUE ~ sex)
) %>%
select(sex, sex_bin, sex_status) %>%
group_by(sex_bin) %>%
count(sex_status) %>%
ggplot(aes(x = sex_bin, y = n, fill = sex_status)) +
geom_col(position = "stack")
train %>%
drop_na() %>%
mutate(sex_bin = case_when(
str_detect(sex, pattern = "Male") ~ "Male",
str_detect(sex, pattern = "Female") ~ "Female",
TRUE ~ sex),
sex_status = case_when(
str_detect(sex, pattern = "Neutered") | str_detect(sex, pattern = "Spayed") ~ "Spayed/Neutered",
str_detect(sex, pattern = "Intact") ~ "Intact",
TRUE ~ sex)
) %>%
select(sex, sex_bin, sex_status) %>%
group_by(sex_bin) %>%
count(sex_status) %>%
ggplot(aes(x = sex_bin, y = n, fill = sex_status)) +
geom_col(position = "stack") +
labs(x = "Sex", y = "Count", fill = "Status")
train %>%
drop_na() %>%
mutate(sex_bin = case_when(
str_detect(sex, pattern = "Male") ~ "Male",
str_detect(sex, pattern = "Female") ~ "Female",
TRUE ~ sex),
sex_status = case_when(
str_detect(sex, pattern = "Neutered") | str_detect(sex, pattern = "Spayed") ~ "Spayed/Neutered",
str_detect(sex, pattern = "Intact") ~ "Intact",
TRUE ~ sex)
) %>%
select(sex, sex_bin, sex_status) %>%
group_by(sex_bin) %>%
count(sex_status) %>%
ggplot(aes(x = sex_bin, y = n, fill = sex_status)) +
geom_col(position = "stack") +
labs(x = "Sex", y = "Count", fill = "Status",
title = "Sex and Status of 26,728 Animals in the Training Data")
train
train %>%
ggplot(aes(x = age)) +
geom_histogram()
train %>%
ggplot(aes(x = age)) +
geom_histogram(binwidth = 2)
train %>%
ggplot(aes(x = age)) +
geom_histogram(binwidth = 2, fill = "dodgerblue2")
train %>%
ggplot(aes(x = age)) +
geom_histogram(binwidth = 2, fill = "dodgerblue2") +
theme_minimal()
train %>%
ggplot(aes(x = age)) +
geom_histogram(binwidth = 2, fill = "dodgerblue2") +
theme_minimal() +
labs(x = "Age (years)",
y = "Count",
title = "Distribution of Animal Age in Training Data")
train
train %>%
count(color)
train %>%
count(color) %>%
arrange(desc(n))
desc_colors <- train %>%
count(color) %>%
arrange(desc(n)) %>% pull(color)
train %>%
mutate(color = factor(color, levels = desc_colors))
train %>%
mutate(color = factor(color, levels = desc_colors)) %>%
count(color)
train %>%
mutate(color = factor(color, levels = desc_colors)) %>%
count(color) %>%
ggplot(aes(x = color, y = n)) +
geom_col()
train %>%
mutate(color = factor(color, levels = desc_colors)) %>%
count(color) %>%
ggplot(aes(x = color, y = n)) +
geom_col() +
coord_flip()
desc_colors <- train %>%
count(color) %>%
arrange(n) %>% pull(color)
train %>%
mutate(color = factor(color, levels = desc_colors)) %>%
count(color) %>%
ggplot(aes(x = color, y = n)) +
geom_col() +
coord_flip()
train %>%
mutate(color = factor(color, levels = desc_colors)) %>%
count(color) %>%
ggplot(aes(x = color, y = n)) +
geom_col() +
coord_flip() +
labs(x = "Animal Coloring",
y = "Count",
title = "Animal Coloring of Animals in Training Data")
train %>%
mutate(color = factor(color, levels = desc_colors)) %>%
count(color) %>%
ggplot(aes(x = color, y = n)) +
geom_col(fill = "dodgerblue2") +
coord_flip() +
labs(x = "Animal Coloring",
y = "Count",
title = "Animal Coloring of Animals in Training Data")
train %>%
mutate(color = factor(color, levels = desc_colors)) %>%
count(color) %>%
ggplot(aes(x = color, y = n)) +
geom_col(fill = "dodgerblue2") +
coord_flip() +
labs(x = "Animal Coloring",
y = "Count",
title = "Animal Coloring of Animals in Training Data") +
theme_minimal()
train
count(outcome_month
train %>%
train %>%
count(outcome_month)
train %>%
count(outcome_month) %>%
ggplot(aes(x = outcome_month, y = n)) +
geom_col(fill = "dodgerblue2")
?scale_x_discrete
train %>%
count(outcome_month) %>%
ggplot(aes(x = outcome_month, y = n)) +
geom_col(fill = "dodgerblue2") +
scale_x_discrete(breaks = 1:12)
train %>%
count(outcome_month) %>%
ggplot(aes(x = outcome_month, y = n)) +
geom_col(fill = "dodgerblue2") +
scale_x_discrete(breaks = 1:12, labels = 1:12)
train %>%
count(outcome_month) %>%
ggplot(aes(x = outcome_month, y = n)) +
geom_col(fill = "dodgerblue2") +
scale_x_continuous(breaks = 1:12, labels = 1:12)
train %>%
count(outcome_month) %>%
ggplot(aes(x = outcome_month, y = n)) +
geom_col(fill = "dodgerblue2") +
scale_x_continuous(breaks = 1:12, labels = 1:12) +
labs(x = "Month",
y = "Number of Outcomes")
train %>%
count(outcome_month) %>%
ggplot(aes(x = outcome_month, y = n)) +
geom_col(fill = "dodgerblue2") +
scale_x_continuous(breaks = 1:12, labels = 1:12) +
labs(x = "Month",
y = "Number of Animals Experiencing Given Outcome")
train %>%
count(outcome_month) %>%
ggplot(aes(x = outcome_month, y = n)) +
geom_col(fill = "dodgerblue2") +
scale_x_continuous(breaks = 1:12, labels = 1:12) +
labs(x = "Month",
y = "Number of Animals Experiencing Given Outcome",
title = "Distribution of Animal Outcome Occurrences by Month")
train
train %>%
count(year)
train
train %>%
count(outcome_year)
train %>%
count(outcome_year) %>%
ggplot(aes(x = outcome_year, y = n)) +
geom_col(fill = "dodgerblue2")
train %>%
count(outcome_year) %>%
ggplot(aes(x = outcome_year, y = n)) +
geom_col(fill = "dodgerblue2", width = 0.8) +
labs(x = "Year", y = "Number of Animals Experiencing Given Outcome")
train %>%
count(outcome_year) %>%
ggplot(aes(x = outcome_year, y = n)) +
geom_col(fill = "dodgerblue2", width = 0.8) +
labs(x = "Year", y = "Number of Animals Experiencing Given Outcome",
title = "Distribution of Animal Outcome Occurrences by Year")
train
train %>%
count(outcome)
train %>%
count(outcome) %>%
gglot(aes(x = outcome, y = n)) +
geom_col(fill = "dodgerblue2", width = 0.8)
train %>%
count(outcome) %>%
ggplot(aes(x = outcome, y = n)) +
geom_col(fill = "dodgerblue2", width = 0.8)
desc_outcomes <- train %>%
count(outcome) %>%
arrange(desc(n)) %>%
pull(outcome)
train %>%
mutate(outcome = factor(outcome, levels = desc_outcomes))
train %>%
mutate(outcome = factor(outcome, levels = desc_outcomes)) %>%
count(outcome) %>%
ggplot(aes(x = outcome, y = n)) +
geom_col(fill = "dodgerblue2", width = 0.8)
train %>%
mutate(outcome = factor(outcome, levels = desc_outcomes)) %>%
count(outcome) %>%
ggplot(aes(x = outcome, y = n)) +
geom_col(fill = "dodgerblue2", width = 0.8) +
labs(x = "Outcome", y = "Count",
title = "Distribution of Animal Outcomes in the Training Data")
train %>%
mutate(outcome = factor(outcome, levels = desc_outcomes)) %>%
count(outcome) %>%
ggplot(aes(x = outcome, y = n)) +
geom_col(fill = "dodgerblue2", width = 0.8) +
labs(x = "Outcome", y = "Count",
title = "Distribution of Animal Outcomes in the Training Data") +
theme_minimal()
install.packages("plsmod")
library(tidyverse)
library(magrittr)
library(lubridate)
library(tidymodels)
library(baguette)
library(plsmod)
install.packages("mixOmics")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("mixOmics")
library(plsmod) #not available for this version of R
library(tidyverse)
library(magrittr)
library(lubridate)
library(tidymodels)
library(baguette)
library(plsmod) #not available for this version of R
library(rules)
library(discrim)
set.seed(143)
